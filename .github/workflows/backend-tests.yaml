name: Backend tests

on:
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master
      - develop

env:
  DB_HOST: postgres
  DB_USER: postgres
  DB_NAME: test
  DB_PASSWORD: postgres
  AWS_ACCESS_KEY_ID: minioadmin
  AWS_SECRET_ACCESS_KEY: minioadmin
  AUDIO_FILE_STORAGE: storages.backends.s3boto3.S3Boto3Storage
  IMAGE_FILE_STORAGE: storages.backends.s3boto3.S3Boto3Storage
  AWS_AUDIO_STORAGE_BUCKET_NAME: labelit-audio-bucket
  AWS_SOURCE_AUDIO_STORAGE_BUCKET_NAME: labelit-audio-source-bucket
  AWS_IMAGE_STORAGE_BUCKET_NAME: uploaded-images
  AWS_S3_OPTIONS: local
  AWS_ENDPOINT_URL: http://localhost:9000

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      minio:
        # See: https://stackoverflow.com/a/64188150/5155484
        image: minio/minio:edge-cicd
        options: --health-cmd "curl -s http://localhost:9000/minio/health/live"
        env:
          MINIO_ROOT_USER: ${{ env.AWS_ACCESS_KEY_ID }}
          MINIO_ROOT_PASSWORD: ${{ env.AWS_SECRET_ACCESS_KEY }}
        ports:
          - 9000:9000
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Create the test buckets
        run: |
          curl -o ./mc -# https://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x ./mc
          ./mc alias set minio ${{ env.AWS_ENDPOINT_URL }} ${{ env.AWS_ACCESS_KEY_ID }} ${{ env.AWS_SECRET_ACCESS_KEY }}
          ./mc mb minio/${{ env.AWS_AUDIO_STORAGE_BUCKET_NAME }}
          ./mc mb minio/${{ env.AWS_SOURCE_AUDIO_STORAGE_BUCKET_NAME }}
          ./mc mb minio/${{ env.AWS_IMAGE_STORAGE_BUCKET_NAME }}
          ./mc ls minio
          rm -v ./mc
      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test db connection
        working-directory: backend/src
        run: |
          python manage.py check --database default
      - name: Run migrations
        working-directory: backend/src
        run: |
          python manage.py migrate
      - name: Test with pytest
        working-directory: backend/src
        run: |
          pytest
