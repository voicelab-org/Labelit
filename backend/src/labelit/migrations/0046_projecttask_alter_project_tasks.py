# Generated by Django 4.1.7 on 2023-03-12 19:28

from django.db import migrations, models
import django.db.models.deletion


### IMPORTANT NOTE !!! THis may cause data loss, TODO: data migration for projects % tasks

class Migration(migrations.Migration):
    dependencies = [
        ("labelit", "0045_task_priority"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProjectTask",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="labelit.project",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="labelit.task"
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
          model_name='project',
          name='tasks',
        ),
        migrations.AddField(
          model_name='project',
          name='tasks',
          field=models.ManyToManyField(related_name='projects', through='labelit.ProjectTask', to='labelit.Task'),
        ),
    ]


"""
# originally automatically created by django, but yields this error:
  
  Applying labelit.0046_projecttask_alter_project_tasks...[CRITICAL:2023-03-12 19:29:05.576] Uncaught exception: <class 'ValueError'> Cannot alter field labelit.Project.tasks into labelit.Project.tasks - they are not compatible types (you cannot alter to or from M2M fields, or add or remove through= on M2M fields) [log.py:12,uncaught_exception_handler()]

# the alterfield has been replaced by a remove THEN an add
migrations.AlterField(
    model_name="project",
    name="tasks",
    field=models.ManyToManyField(
        related_name="projects",
        through="labelit.ProjectTask",
        to="labelit.task",
    ),
),
"""