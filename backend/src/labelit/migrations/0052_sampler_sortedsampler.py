# Generated by Django 4.1.7 on 2023-05-19 09:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("labelit", "0051_alter_dataset_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Sampler",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "project",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sampler",
                        to="labelit.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SortedSampler",
            fields=[
                (
                    "sampler_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="labelit.sampler",
                    ),
                ),
                (
                    "sorting_key",
                    models.TextField(verbose_name="The key to sort documents by"),
                ),
                (
                    "is_ascending",
                    models.BooleanField(
                        default=True, verbose_name="Whether sorting is ascending"
                    ),
                ),
            ],
            bases=("labelit.sampler",),
        ),
    ]
